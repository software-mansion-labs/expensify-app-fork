diff --git a/node_modules/react-native-reanimated/Common/cpp/worklets/WorkletRuntime/ReanimatedHermesRuntime.cpp b/node_modules/react-native-reanimated/Common/cpp/worklets/WorkletRuntime/ReanimatedHermesRuntime.cpp
index f7b7b41..5ecdfed 100644
--- a/node_modules/react-native-reanimated/Common/cpp/worklets/WorkletRuntime/ReanimatedHermesRuntime.cpp
+++ b/node_modules/react-native-reanimated/Common/cpp/worklets/WorkletRuntime/ReanimatedHermesRuntime.cpp
@@ -22,45 +22,6 @@ namespace worklets {
 
 using namespace facebook;
 using namespace react;
-#if HERMES_ENABLE_DEBUGGER
-#if REACT_NATIVE_MINOR_VERSION >= 73
-using namespace facebook::hermes::inspector_modern;
-#else
-using namespace facebook::hermes::inspector;
-#endif
-#endif // HERMES_ENABLE_DEBUGGER
-
-#if HERMES_ENABLE_DEBUGGER
-
-class HermesExecutorRuntimeAdapter : public RuntimeAdapter {
- public:
-  explicit HermesExecutorRuntimeAdapter(
-      facebook::hermes::HermesRuntime &hermesRuntime,
-      const std::shared_ptr<MessageQueueThread> &thread)
-      : hermesRuntime_(hermesRuntime), thread_(std::move(thread)) {}
-
-  virtual ~HermesExecutorRuntimeAdapter() {
-    // This is required by iOS, because there is an assertion in the destructor
-    // that the thread was indeed `quit` before
-    thread_->quitSynchronous();
-  }
-
-  facebook::hermes::HermesRuntime &getRuntime() override {
-    return hermesRuntime_;
-  }
-
-  // This is not empty in the original implementation, but we decided to tickle
-  // the runtime by running a small piece of code on every frame as using this
-  // required us to hold a refernce to the runtime inside this adapter which
-  // caused issues while reloading the app.
-  void tickleJs() override {}
-
- public:
-  facebook::hermes::HermesRuntime &hermesRuntime_;
-  std::shared_ptr<MessageQueueThread> thread_;
-};
-
-#endif // HERMES_ENABLE_DEBUGGER
 
 ReanimatedHermesRuntime::ReanimatedHermesRuntime(
     std::unique_ptr<facebook::hermes::HermesRuntime> runtime,
@@ -70,15 +31,9 @@ ReanimatedHermesRuntime::ReanimatedHermesRuntime(
           *runtime,
           reentrancyCheck_),
       runtime_(std::move(runtime)) {
-#if HERMES_ENABLE_DEBUGGER
-  auto adapter =
-      std::make_unique<HermesExecutorRuntimeAdapter>(*runtime_, jsQueue);
-  debugToken_ = chrome::enableDebugging(std::move(adapter), name);
-#else
   // This is required by iOS, because there is an assertion in the destructor
   // that the thread was indeed `quit` before
   jsQueue->quitSynchronous();
-#endif // HERMES_ENABLE_DEBUGGER
 
 #ifndef NDEBUG
   facebook::hermes::HermesRuntime *wrappedRuntime = runtime_.get();
@@ -111,10 +66,6 @@ ReanimatedHermesRuntime::ReanimatedHermesRuntime(
 }
 
 ReanimatedHermesRuntime::~ReanimatedHermesRuntime() {
-#if HERMES_ENABLE_DEBUGGER
-  // We have to disable debugging before the runtime is destroyed.
-  chrome::disableDebugging(debugToken_);
-#endif // HERMES_ENABLE_DEBUGGER
 }
 
 } // namespace worklets
diff --git a/node_modules/react-native-reanimated/Common/cpp/worklets/WorkletRuntime/ReanimatedHermesRuntime.h b/node_modules/react-native-reanimated/Common/cpp/worklets/WorkletRuntime/ReanimatedHermesRuntime.h
index 8d3e9f4..b05c5e2 100644
--- a/node_modules/react-native-reanimated/Common/cpp/worklets/WorkletRuntime/ReanimatedHermesRuntime.h
+++ b/node_modules/react-native-reanimated/Common/cpp/worklets/WorkletRuntime/ReanimatedHermesRuntime.h
@@ -27,26 +27,10 @@
 #include <hermes/hermes.h>
 #endif
 
-#if HERMES_ENABLE_DEBUGGER
-#if REACT_NATIVE_MINOR_VERSION >= 73
-#include <hermes/inspector-modern/chrome/Registration.h>
-#else
-#include <hermes/inspector/RuntimeAdapter.h>
-#include <hermes/inspector/chrome/Registration.h>
-#endif
-#endif // HERMES_ENABLE_DEBUGGER
-
 namespace worklets {
 
 using namespace facebook;
 using namespace react;
-#if HERMES_ENABLE_DEBUGGER
-#if REACT_NATIVE_MINOR_VERSION >= 73
-using namespace facebook::hermes::inspector_modern;
-#else
-using namespace facebook::hermes::inspector;
-#endif
-#endif // HERMES_ENABLE_DEBUGGER
 
 // ReentrancyCheck is copied from React Native
 // from ReactCommon/hermes/executor/HermesExecutorFactory.cpp
@@ -137,9 +121,6 @@ class ReanimatedHermesRuntime
  private:
   std::unique_ptr<facebook::hermes::HermesRuntime> runtime_;
   ReanimatedReentrancyCheck reentrancyCheck_;
-#if HERMES_ENABLE_DEBUGGER
-  chrome::DebugSessionToken debugToken_;
-#endif // HERMES_ENABLE_DEBUGGER
 };
 
 } // namespace worklets
diff --git a/node_modules/react-native-reanimated/android/src/main/cpp/worklets/CMakeLists.txt b/node_modules/react-native-reanimated/android/src/main/cpp/worklets/CMakeLists.txt
index 8961bf3..f6c8f00 100644
--- a/node_modules/react-native-reanimated/android/src/main/cpp/worklets/CMakeLists.txt
+++ b/node_modules/react-native-reanimated/android/src/main/cpp/worklets/CMakeLists.txt
@@ -83,7 +83,7 @@ endif()
 if(${JS_RUNTIME} STREQUAL "hermes")
     target_link_libraries(
         worklets
-        hermes-engine::libhermes
+        hermes-engine::hermesvm
     )
 
     if(${HERMES_ENABLE_DEBUGGER})
