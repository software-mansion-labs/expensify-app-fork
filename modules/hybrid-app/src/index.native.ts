import {setClosingReactNativeApp} from '@userActions/HybridApp';
import ReactNativeHybridApp from './NativeReactNativeHybridApp';
import type HybridAppModuleType from './types';

const HybridAppModule: HybridAppModuleType = {
    isHybridApp() {
        return ReactNativeHybridApp.isHybridApp();
    },
    closeReactNativeApp({shouldSignOut, shouldSetNVP}) {
        setClosingReactNativeApp(true);
        ReactNativeHybridApp.closeReactNativeApp(shouldSignOut, shouldSetNVP);
    },
    completeOnboarding({status}) {
        ReactNativeHybridApp.completeOnboarding(status);
    },
    switchAccount({newDotCurrentAccountEmail, authToken, policyID, accountID}) {
        ReactNativeHybridApp.switchAccount(newDotCurrentAccountEmail, authToken, policyID, accountID);
    },
    sendAuthToken({authToken}) {
        ReactNativeHybridApp.sendAuthToken(authToken);
    },
    signInToOldDot({autoGeneratedLogin, autoGeneratedPassword, authToken, email, policyID}) {
        ReactNativeHybridApp.signInToOldDot(autoGeneratedLogin, autoGeneratedPassword, authToken, email, policyID);
    },
    signOutFromOldDot() {
        ReactNativeHybridApp.signOutFromOldDot();
    },
};

export default HybridAppModule;
