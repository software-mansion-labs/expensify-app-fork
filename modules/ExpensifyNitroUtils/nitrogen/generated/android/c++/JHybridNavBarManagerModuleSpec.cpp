///
/// JHybridNavBarManagerModuleSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "JHybridNavBarManagerModuleSpec.hpp"

// Forward declaration of `NavBarButtonStyle` to properly resolve imports.
namespace margelo::nitro::utils { enum class NavBarButtonStyle; }

#include <string>
#include "NavBarButtonStyle.hpp"
#include "JNavBarButtonStyle.hpp"

namespace margelo::nitro::utils {

  jni::local_ref<JHybridNavBarManagerModuleSpec::jhybriddata> JHybridNavBarManagerModuleSpec::initHybrid(jni::alias_ref<jhybridobject> jThis) {
    return makeCxxInstance(jThis);
  }

  void JHybridNavBarManagerModuleSpec::registerNatives() {
    registerHybrid({
      makeNativeMethod("initHybrid", JHybridNavBarManagerModuleSpec::initHybrid),
    });
  }

  size_t JHybridNavBarManagerModuleSpec::getExternalMemorySize() noexcept {
    static const auto method = javaClassStatic()->getMethod<jlong()>("getMemorySize");
    return method(_javaPart);
  }

  void JHybridNavBarManagerModuleSpec::dispose() noexcept {
    static const auto method = javaClassStatic()->getMethod<void()>("dispose");
    method(_javaPart);
  }

  // Properties
  

  // Methods
  void JHybridNavBarManagerModuleSpec::setButtonStyle(NavBarButtonStyle style) {
    static const auto method = javaClassStatic()->getMethod<void(jni::alias_ref<JNavBarButtonStyle> /* style */)>("setButtonStyle");
    method(_javaPart, JNavBarButtonStyle::fromCpp(style));
  }
  std::string JHybridNavBarManagerModuleSpec::getType() {
    static const auto method = javaClassStatic()->getMethod<jni::local_ref<jni::JString>()>("getType");
    auto __result = method(_javaPart);
    return __result->toStdString();
  }

} // namespace margelo::nitro::utils
